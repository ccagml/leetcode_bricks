{"data":[{"name":"2023-04-23 15:13:06","id":1682233986054,"body":"耗时 0:22:43 很像接雨水\nclass Solution\n{\npublic:\n    int maximumScore(vector<int> &nums, int k)\n    {\n\n        int n = nums.size();\n        vector<int> left(n, -1);\n        vector<int> right(n, n);\n        stack<pair<int, int>> sp;\n        for (int j = 0; j < n; j++)\n        {\n            int cur = nums[j];\n            while (sp.size() > 0 && sp.top().first >= cur)\n            {\n                sp.pop();\n            }\n            if (sp.size() > 0)\n            {\n                left[j] = sp.top().second;\n            }\n            sp.push({cur, j});\n        }\n        stack<pair<int, int>> sp1;\n        for (int j = n - 1; j >= 0; j--)\n        {\n            int cur = nums[j];\n            while (sp1.size() > 0 && sp1.top().first >= cur)\n            {\n                sp1.pop();\n            }\n            if (sp1.size() > 0)\n            {\n                right[j] = sp1.top().second;\n            }\n            sp1.push({cur, j});\n        }\n        int temp = 0;\n        for (int i = 0; i < nums.size(); i++)\n        {\n            int cur = nums[i];\n            int left_v = left[i];\n            int right_v = right[i];\n            if (left_v + 1 <= k && k <= right_v - 1)\n            {\n                temp = max(temp, cur * (right_v - left_v - 1));\n            }\n        }\n        return temp;\n    }\n};"}]}